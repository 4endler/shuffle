{"version":3,"sources":["main.js","accordion-gallery/_accordion-gallery.js","bubbles/_bubbles.js","download/_download.js","infinite-list/__inf-list.js","modal/_modal.js","phglr/_phglr.js","why/_why.js"],"names":["window","lazyLoadOptions","addEventListener","event","LazyLoad","lottie","loadAnimation","container","document","getElementById","renderer","loop","autoplay","path","setSpeed","swiper","Swiper","spaceBetween","centeredSlides","slidesPerView","initialSlide","pagination","el","clickable","panelSlides","querySelectorAll","accordionGal","forEach","sl","index","slideTo","SVG_NS","length","gal","i","closest","e","classList","remove","add","svg","dots","setAttributeNS","clientWidth","clientHeight","Array","from","dotsAll","dotsContainer","createRelations","d","targetBox","querySelector","getAttribute","drawConnectorStraight","getCoords","x","offsetLeft","y","offsetTop","a","b","start","finish","createElementNS","mapPath","letgth","getTotalLength","appendChild","concat","changePath","p","floatBlocks","setTimeout","Math","random","style","transform","setInterval","swiperEventsMain","slideClass","breakpoints","300","1400","infList","infGap","infTimeout","listTimeout","cloneElements","direction","c","newEl","cloneNode","insertBefore","infPlay","distantion","list","allWidth","abs","children","contains","openModalBtns","overlay","closeModalBtns","btn","preventDefault","target","showOverlay","hideOverlay","observer","310","655","768","whyEls","scrollTracking","entries","_step","_iterator","_createForOfIteratorHelper","s","n","done","entry","value","intersectionRatio","showWhyEl","err","f","obj","IntersectionObserver","threshold","observe"],"mappings":"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","file":"main.js","sourcesContent":["//BG\r\n// function showBg(e){\r\n     \r\n// \tif (e.key == \"H\") {\r\n// \t\tdocument.body.classList.toggle(\"bg\");\r\n// \t}\r\n    \r\n// }\r\n \r\n// addEventListener(\"keydown\", showBg);\r\n\r\n\r\n\r\n\r\n//Lazy Load\r\n  // Set the options globally\r\n  // to make LazyLoad self-initialize\r\n  window.lazyLoadOptions = {\r\n    //use_native: true\r\n  };\r\n  // Listen to the initialization event\r\n  // and get the instance of LazyLoad\r\n  // window.addEventListener(\r\n  //   \"LazyLoad::Initialized\",\r\n  //   function (event) {\r\n  //   \tconsole.log('Lazy');\r\n  //     window.lazyLoadInstance = event.detail.instance;\r\n  //   },\r\n  //   false\r\n  // );\r\nwindow.addEventListener(\"load\", function(event) {\r\n\t//console.log('lazy');\r\n\t// window.lazyLoadInstance = event.detail.instance;\r\n\tvar lazyLoadInstance = new LazyLoad({\r\n\t  // Your custom settings go here\r\n\t});\r\n//LOTTIE AMNIMATION\r\nconst animation = lottie.loadAnimation({\r\n\tcontainer: document.getElementById('shuffle-logo'), // контейнер для анимации\r\n\trenderer: 'svg', // тип рендерера (может быть 'svg', 'canvas' или 'html')\r\n\tloop: true, // зацикливание анимации\r\n\tautoplay: true, // автоматический запуск анимации\r\n\tpath: 'js/libs/shuffle-logo.json' // путь к вашему JSON-файлу с анимацией\r\n  });\r\n  animation.setSpeed(0.5)\r\n\t// new VenoBox({\r\n\t//     selector: \".venobox\"\r\n\t// });\r\n\t\r\n});\r\n\r\n\r\n//SWIPERS\r\nvar swiper = new Swiper(\".panel-slider\", {\r\n\tspaceBetween: 16,\r\n\tcenteredSlides: true,\r\n\t// speed:3000,\r\n\tslidesPerView: 'auto',\r\n\t// loop: true,\r\n\t// loopedSlides:1,\r\n\tinitialSlide: 1,\r\n\t// touchMoveStopPropagation: true,\r\n\t// autoplay: {\r\n\t//   delay: 0,\r\n\t// //   disableOnInteraction: false,\r\n\t// //   pauseOnMouseEnter: true,\r\n\t// \twaitForTransition: true,\r\n\t// },\r\n\t// freeMode: true,\r\n\tpagination: {\r\n\t  el: \".swiper-pagination\",\r\n\t  clickable: true,\r\n\t},\r\n\t// navigation: {\r\n\t//   nextEl: \".swiper-slide-next\",\r\n\t//   prevEl: \".swiper-slide-prev\",\r\n\t// },\r\n\r\n  });\r\n\r\n  const panelSlides = document.querySelectorAll('.panel-slider .swiper-slide');\r\n  if (panelSlides) {\r\n\tpanelSlides.forEach((sl,index)=>{\r\n\t\tsl.addEventListener('click', ()=>{\r\n\t\t\tswiper.slideTo(index, 300)\r\n\t\t})\r\n\t})\r\n  }\r\n  ","const accordionGal = document.querySelectorAll('.accordion-gallery');\r\n\r\nif (accordionGal.length > 0) {\r\n    accordionGal.forEach(gal=>{\r\n        var item = gal.querySelectorAll('.item');\r\n        item.forEach(i=>{\r\n            i.addEventListener('click', ()=>{\r\n                i.closest('.accordion-gallery').querySelectorAll('.item').forEach((e)=>{\r\n                    e.classList.remove('active');\r\n                })\r\n                i.classList.add('active');\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\n\r\n","//Relations\r\nconst SVG_NS = 'http://www.w3.org/2000/svg';\r\n// let mainBox = bubbles.getBoundingClientRect();\r\nlet svg = document.getElementById('bubbles_svg');\r\nsvg.setAttributeNS(null,\"viewBox\",'0 0 '+svg.clientWidth +' '+svg.clientHeight);\r\nlet dots = Array.from(document.querySelectorAll(\"#bubbles .dot[data-target]\"));\r\nlet dotsAll = Array.from(document.querySelectorAll(\"#bubbles .dot\"));\r\nlet dotsContainer = document.getElementById('bubbles');\r\n\r\nfunction createRelations(){//Создаем \"связи между объектами\"\r\n\tdots.forEach(d=>{\r\n\t\tlet targetBox = document.querySelector('#'+d.getAttribute('data-target'));\r\n\r\n        let a = getCoords(d);\r\n        let b = getCoords(targetBox);\r\n\t\tdrawConnectorStraight(a,b, d.getAttribute('id'), d.getAttribute('data-target'));\r\n\t})\r\n}\r\nfunction getCoords(el){//Получаем координаты конкретной точки, для обновления пути\r\n\t// расчёт  x и y координат для контактных разъемов на блоках числом от 0 до 100 \r\n\tlet x = el.offsetLeft + el.clientWidth/2;\r\n\tlet y = el.offsetTop + el.clientHeight/2;\r\n\treturn {'x':x,'y':y};\r\n}\r\n//РИСУЕМ СОЕДИНЯЮЩИЕ ПРЯМЫЕ ЛИНИИ\r\nfunction drawConnectorStraight(a,b, start, finish){//Рисуем path, соединяющие точки\r\n  let path = document.createElementNS(SVG_NS, 'path');\r\n//   C - искривление\r\n//   let d = `M${a.x},${a.y} C ${a.x} ${a.y}, ${a.x + 50} ${a.y + 50}, ${b.x},${b.y} L${b.x} ${b.y}`;\r\n  let d = mapPath(a,b);\r\n  \r\n  path.setAttributeNS(null,\"d\",d);\r\n  let letgth = path.getTotalLength();\r\n  path.setAttributeNS(null,\"data-start\",start);\r\n  path.setAttributeNS(null,\"data-end\",finish);\r\n  path.setAttributeNS(null,\"letgth\",letgth);\r\n  svg.appendChild(path);\r\n  //рисуем такой же путь, который для фона\r\n//   let path2 = document.createElementNS(SVG_NS, 'path');\r\n//   path2.setAttributeNS(null,\"d\",d);\r\n//   path2.setAttributeNS(null,\"data-start\",start);\r\n//   path2.setAttributeNS(null,\"data-end\",finish);\r\n//   path2.setAttributeNS(null,\"class\",\"light\");\r\n//   path2.setAttributeNS(null,\"stroke-dasharray\",letgth);\r\n//   path2.setAttributeNS(null,\"stroke-dashoffset\",letgth);\r\n//   path2.setAttributeNS(null,\"stroke\",\"url(#path_gradient)\");\r\n//   svg.appendChild(path2)\r\n}\r\nfunction mapPath(a, b) {\r\n\t// return `M${a.x},${a.y} C ${a.x + 50} ${a.y + 50}, ${b.x + 100} ${b.y + 50}, ${b.x},${b.y} L${b.x} ${b.y}`;\r\n\treturn `M${a.x},${a.y} L${b.x} ${b.y}`;\r\n}\r\nif (dots) {\r\n\tcreateRelations();\r\n}\r\n//РИСУЕМ СОЕДИНЯЮЩИЕ КРИВЫЕ ЛИНИИ\r\n// function drawConnector(a,b, start, finish){//Рисуем path, соединяющие точки\r\n//   let path = document.createElementNS(SVG_NS, 'path');\r\n//   let d = `M${a.x},${a.y} C50,${a.y} 50 ${b.y} ${b.x} ${b.y}`;\r\n//   path.setAttributeNS(null,\"d\",d);\r\n//   path.setAttributeNS(null,\"data-start\",start);\r\n//   path.setAttributeNS(null,\"data-end\",finish);\r\n//   svg.appendChild(path)\r\n// }\r\n// if (dots) {\r\n// \tcreateRelations();\r\n// }\r\n\r\n// CHANGE PATH FOR FLOATING BUBBLES\r\nsetInterval(changePath, 100);\r\n\r\nfunction changePath(){\r\n\tvar paths = document.querySelectorAll('#bubbles_svg path:not(.light)');\r\n\tpaths.forEach((p)=>{\r\n        let a = dotsContainer.querySelector('#'+p.getAttribute('data-start'));\r\n        let b = dotsContainer.querySelector('#'+p.getAttribute('data-end'));\r\n\t\ta = getCoords(a);\r\n\t\tb = getCoords(b);\r\n\t\tlet d = mapPath(a,b);\r\n\t\tp.setAttributeNS(null,\"d\",d);\r\n\t\t// p.setAttributeNS(null,\"fill\",'red');\r\n\t\t// p.setAttributeNS(null,\"stroke\",'green');\r\n\r\n\t\t\r\n\t})\r\n\t//Обновляем и анимируем пути\r\n\t// var pathsLight = document.querySelectorAll('#bubbles_svg path.light');\r\n\t// pathsLight.forEach((p)=>{\r\n    //     let a = dotsContainer.querySelector('#'+p.getAttribute('data-start'));\r\n    //     let b = dotsContainer.querySelector('#'+p.getAttribute('data-end'));\r\n\t// \ta = getCoords(a);\r\n\t// \tb = getCoords(b);\r\n\t// \tlet d = mapPath(a,b);\r\n\t// \tp.setAttributeNS(null,\"d\",d);\r\n\t// \tlet letgth = p.getTotalLength();\r\n\t// })\r\n}\r\n\r\n// setInterval(animatePath, 1000);\r\n// function animatePath(){\r\n// \t//Обновляем и анимируем пути\r\n// \tvar pathsLight = document.querySelectorAll('#bubbles_svg path.light');\r\n// \tpathsLight.forEach((p)=>{\r\n// \t\tlet letgth = p.getTotalLength();\r\n// \t\tp.setAttributeNS(null,\"class\",\"light\");\r\n// \t\tp.setAttributeNS(null,\"stroke-dashoffset\",letgth);\r\n// \t\tsetTimeout(()=>{\r\n// \t\t\tp.setAttributeNS(null,\"class\",\"light animated\");\r\n// \t\t\tp.setAttributeNS(null,\"stroke-dashoffset\",-letgth);\r\n// \t\t\t\t\t},Math.random() * 2000)\r\n\t\t\r\n//         // let a = dotsContainer.querySelector('#'+p.getAttribute('data-start'));\r\n//         // let b = dotsContainer.querySelector('#'+p.getAttribute('data-end'));\r\n// \t\t// a = getCoords(a);\r\n// \t\t// b = getCoords(b);\r\n// \t\t// let d = mapPath(a,b);\r\n// \t\t// p.setAttributeNS(null,\"d\",d);\r\n\t\t\r\n// \t\t// p.setAttributeNS(null,\"data-start\",start);\r\n// \t\t// p.setAttributeNS(null,\"data-end\",finish);\r\n// \t\t// p.setAttributeNS(null,\"class\",\"light\");\r\n// \t\t// p.setAttributeNS(null,\"stroke-dasharray\",letgth);\r\n\t\t\r\n\r\n// \t})\r\n// }\r\n// FLOAT BUBBLES\r\nsetInterval(function() { floatBlocks(dotsAll) }, 2000);\r\n\r\nfunction floatBlocks(dots){\r\n\tdots.forEach(d=>{\r\n\t\t// let dcoord = d.getBoundingClientRect();\r\n\t\tsetTimeout(()=>{\r\n\t\t\tlet x = Math.random() * 30 -15;\r\n\t\t\tlet y =Math.random() * 30 -15;\r\n\t\t\td.style.transform = `translate(${x}px,${y}px)`;\r\n\t\t},Math.random() * 1000)\r\n\t\t\r\n\t\t// d.style.transform = \"translate(10px,10px)\";\r\n\r\n\t})\r\n}","var swiperEventsMain = new Swiper(\".features\", {\r\n    \r\n    slidesPerView: 4,\r\n    // initialSlide:1,\r\n    slideClass: 'item',\r\n    spaceBetween: 32,\r\n    // loop: true,\r\n    // centeredSlides:true,\r\n    // effect: \"creative\",\r\n    // creativeEffect: {\r\n    //     prev: {\r\n    //         translate: ['-77.5%',-40,-400], //([horizontal, vertical, depth])\r\n    //     },\r\n    //     next: {\r\n    //         translate: ['77.5%',-40,-400], //([horizontal, vertical, depth])\r\n    //     },\r\n    // },\r\n\r\n\r\n\r\n\r\n    //   pagination: {\r\n    //   el: '.pagination_dots .dots',\r\n    //         clickable: true,\r\n    //       renderBullet: function (index, className) {\r\n    //           return '<span class=\"' + className + '\"></span>';\r\n    //       },\r\n    //   },\r\n    //   navigation: {\r\n    //       nextEl: \".events_main .events .btn_prev\",\r\n    //       prevEl: \".events_main .events .btn_next\"\r\n    //     },\r\n\r\n        breakpoints: {\r\n            // when window width is >= 320px\r\n            300: {\r\n                slidesPerView: 'auto',\r\n                // initialSlide:1,\r\n            },\r\n            // 400: {\r\n            //     slidesPerView: 3,\r\n            //     spaceBetween: 16,\r\n            //     initialSlide:1,\r\n            // },\r\n            1400: {\r\n                slidesPerView: 4,\r\n            }\r\n          }\r\n  });","const infList = document.querySelectorAll('.inf-list__wrapper');\r\nconst infGap = 20;\r\nlet infTimeout = 10;\r\nlet listTimeout = [];\r\nif (infList.length > 0) {\r\n    infList.forEach((list, index)=>{\r\n        listTimeout[index] = infTimeout;\r\n        let direction = -1\r\n        list.addEventListener('mouseover', ()=>{\r\n            listTimeout[index] = 40;\r\n        })\r\n        list.addEventListener('mouseout', ()=>{\r\n            listTimeout[index] = infTimeout;\r\n        })\r\n        if (list.classList.contains('inf-list__wrapper_right')) {\r\n            direction = 1;\r\n        }\r\n        let children = list.querySelectorAll('.item');\r\n        let allWidth = (children[0].clientWidth + infGap) * children.length;\r\n        //Клонируем сразу элементы\r\n        cloneElements(list, direction);\r\n        let distantion = 0;\r\n        setTimeout(()=>{\r\n            infPlay(distantion, list, allWidth, index, direction)\r\n        }, listTimeout[index]);\r\n    })\r\n}\r\n\r\nfunction cloneElements(el, direction) {\r\n    let children = el.querySelectorAll('.item');\r\n    children.forEach(c => {\r\n        let newEl = c.cloneNode(true);\r\n        if (direction == -1) {\r\n            el.appendChild(newEl);\r\n        } else {\r\n            el.insertBefore(newEl, el[0]);\r\n        }\r\n        \r\n    });\r\n}\r\n\r\nfunction infPlay(distantion, list, allWidth, index, direction) {\r\n    distantion += 1*direction;\r\n    list.style = `transform: translateX( ${distantion}px)`;\r\n    if (Math.abs(distantion) > allWidth) {\r\n        distantion = 0;\r\n    }\r\n    // console.log(index);\r\n    // console.log(listTimeout[index]);\r\n    setTimeout(()=>{\r\n            infPlay(distantion, list, allWidth, index,direction)\r\n        }, listTimeout[index]);\r\n}\r\n\r\n\r\n","const openModalBtns = document.querySelectorAll('.open-modal');\r\nconst overlay = document.querySelector('.overlay')\r\nif (openModalBtns) {\r\n    openModalBtns.forEach(btn=>{\r\n        btn.addEventListener('click', (e)=>{\r\n            e.preventDefault();\r\n            let target = btn.getAttribute('data-target');\r\n            document.getElementById(target).classList.add('opened');\r\n            showOverlay();\r\n        })\r\n    })\r\n}\r\nconst closeModalBtns = document.querySelectorAll('.modal__close');\r\n\r\nif (closeModalBtns) {\r\n    closeModalBtns.forEach(btn=>{\r\n        btn.addEventListener('click', ()=>{\r\n            btn.closest('.modal').classList.remove('opened');\r\n            hideOverlay();\r\n            // document.getElementById(target).classList.add('opened');\r\n        })\r\n    })\r\n}\r\nfunction showOverlay(){\r\n    overlay.classList.add('opened');\r\n}\r\nfunction hideOverlay(){\r\n    overlay.classList.remove('opened');\r\n}","var swiperEventsMain = new Swiper(\".phglr\", {\r\n    \r\n    spaceBetween: 30,\r\n    initialSlide:1,\r\n    // loop: true,\r\n    centeredSlides:true,\r\n    // effect: \"creative\",\r\n    // creativeEffect: {\r\n    //     prev: {\r\n    //         translate: ['-77.5%',-40,-400], //([horizontal, vertical, depth])\r\n    //     },\r\n    //     next: {\r\n    //         translate: ['77.5%',-40,-400], //([horizontal, vertical, depth])\r\n    //     },\r\n    // },\r\n\r\n\r\n\r\n\r\n    //   pagination: {\r\n    //   el: '.pagination_dots .dots',\r\n    //         clickable: true,\r\n    //       renderBullet: function (index, className) {\r\n    //           return '<span class=\"' + className + '\"></span>';\r\n    //       },\r\n    //   },\r\n    //   navigation: {\r\n    //       nextEl: \".events_main .events .btn_prev\",\r\n    //       prevEl: \".events_main .events .btn_next\"\r\n    //     },\r\n\r\n        breakpoints: {\r\n            // when window width is >= 320px\r\n            300: {\r\n                slidesPerView: 1.6,\r\n                spaceBetween: 16,\r\n                // initialSlide:1,\r\n            },\r\n            // 380: {\r\n            //     slidesPerView: 1.8,\r\n            //     spaceBetween: 16,\r\n            //     // initialSlide:1,\r\n            // },\r\n\r\n            // 470: {\r\n            //     slidesPerView: 2.2,\r\n            //     spaceBetween: 16,\r\n            // },\r\n            310: {\r\n                slidesPerView: 2.5,\r\n                spaceBetween: 16,\r\n            },\r\n            655: {\r\n                slidesPerView: 2.45,\r\n            },\r\n            768: {\r\n                slidesPerView: 3,\r\n            }\r\n          }\r\n  });","var whyEls = document.querySelectorAll('.why__item.animate');\r\n\r\nif (whyEls.length > 0) {\r\n    const observer = new IntersectionObserver(scrollTracking, {\r\n        threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\r\n      });\r\n      whyEls.forEach(e=>{\r\n            observer.observe(e);\r\n      })\r\n      \r\n}\r\n\r\nfunction scrollTracking(entries) {\r\n    var i = 0;\r\n  for (const entry of entries) {\r\n    if (entry.target.classList.contains('animate') && entry.intersectionRatio > 0.6) {\r\n        i++;\r\n        // console.log(entry.intersectionRatio);\r\n        // console.log(i);\r\n        showWhyEl(entry.target,i);\r\n        // whyBg.classList.add('collapsed');\r\n        // setTimeout(function(){\r\n        //     whyBg.style.zIndex = -1;\r\n        // }, 900);\r\n    }\r\n  }\r\n}\r\n\r\nfunction showWhyEl(obj, index) {\r\n    setTimeout(function(){\r\n        obj.classList.add('a-1');\r\n    }, 600 * (index + 1) - 500);\r\n    setTimeout(function(){\r\n        obj.classList.add('a-2');\r\n        }, 600 * (index + 1) + 200);\r\n    setTimeout(function(){\r\n        obj.classList.remove('a-hidden');\r\n        obj.classList.remove('a-1');\r\n        obj.classList.remove('a-2');\r\n        obj.classList.remove('animate');\r\n        whyEls = document.querySelectorAll('.why__item.animate');\r\n        }, 600 * (index + 2) + 100);\r\n}\r\n\r\n// Определяем функцию задержки в которую передаем время\r\n// const delay = (time) => {\r\n//     return new Promise((resolve, reject) => setTimeout(resolve, time))\r\n//  }\r\nif (whyEls) {\r\n\r\n    // whyEls.forEach(function(obj, index) {\r\n    //     setTimeout(function(){\r\n    //       obj.classList.add('a-1');\r\n    //     }, 600 * (index + 1) - 300);\r\n    //     setTimeout(function(){\r\n    //         obj.classList.add('a-2');\r\n    //       }, 600 * (index + 1) + 200);\r\n    //     setTimeout(function(){\r\n    //         obj.classList.remove('a-hidden');\r\n    //         obj.classList.remove('a-1');\r\n    //         obj.classList.remove('a-2');\r\n    //       }, 600 * (index + 2) + 100);\r\n    // });\r\n\r\n}\r\n\r\n// 300 a1      900\r\n// 800 a2      1400    2000\r\n// 1300 none   1900    2500"]}